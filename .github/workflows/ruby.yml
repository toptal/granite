# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  rspec:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { ruby: '2.7', rails: '6.1' }
          - { ruby: '3.0', rails: '7.0' }
          - { ruby: '3.1', rails: '7.0' }
          - { ruby: '3.2', rails: '7.1' }
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/rails.${{ matrix.rails }}.gemfile

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: granite
          POSTGRES_PASSWORD: granite
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
      # change this to (see https://github.com/ruby/setup-ruby#versioning):
      # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Run tests
      env:
        DATABASE_URL: "postgres://granite:granite@localhost:5432/granite"
        RAILS_ENV: test
      run: bundle exec rake

  rubocop:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
    - run: bundle exec rubocop
